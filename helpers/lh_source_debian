#!/bin/sh

# lh_source_debian(1) - download sources
# Copyright (C) 2006-2008 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="$(Echo 'debian sources')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

if [ "${LH_SOURCE}" != "enabled" ]
then
	exit 0
fi

Echo_message "Begin downloading sources..."

# Requiring stage file
Require_stagefile .stage/config .stage/bootstrap

# Checking stage file
Check_stagefile .stage/source_debian

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Remove old sources
if [ -d source/debian ]
then
	rm -rf source/debian
fi

# Download sources
Chroot chroot "dpkg --get-selections" | awk '{ print $1 }' > source-selection.txt

cat >> source-selection.txt << EOF
${LH_BOOTLOADER}
live-helper
${LH_INITRAMFS}
dosfstools
genisoimage
parted
squashfs-tools
genext2fs
mtd-tools
EOF

case "${LH_ARCHITECTURE}" in
	amd64|i386)

cat >> source-selection.txt << EOF
mtools
syslinux
grub
EOF

		if [ "${LH_MEMTEST}" != "disabled" ] && [ "${LH_MEMTEST}" != "none" ]
		then
			echo "${LH_MEMTEST}" >> source-selection.txt
		fi
		;;

	powerpc)
		echo "yaboot" >> source-selection.txt
		;;

	sparc)

cat >> source-selection.txt << EOF
silo
sparc-utils
EOF

		;;
esac

if [ -n "${LH_TASKS}" ]
then
	echo "${LH_TASKSEL}" >> source-selection.txt
fi

MISSING=""

grep . source-selection.txt | \
while read PACKAGE
do
	if ! Chroot chroot "apt-get ${APT_OPTIONS} --download-only source ${PACKAGE}"
	then
		MISSING="${MISSING} ${PACKAGE}"
	fi
done

if [ -n "${MISSING}" ]
then
	cat > source/missing-source.txt << EOF
This file contains the list of binary packages that are installed on this live
system that do not have a corresponding source package.

EOF

	for PACKAGE in ${MISSING}
	do
		Chroot chroot "dpkg -l ${PACKAGE}" | tail -n1 >> source/missing-source.txt
	done
fi

rm -f source-selection.txt

# Sort sources
for DSC in chroot/*.dsc
do
	SOURCE="$(sed -n 's|^Source: ||p' ${DSC})"

	case "${SOURCE}" in
		lib?*)
			LETTER="$(echo ${SOURCE} | sed 's|\(....\).*|\1|')"
			;;

		*)
			LETTER="$(echo ${SOURCE} | sed 's|\(.\).*|\1|')"
			;;
	esac

	# Install directory
	mkdir -p source/debian/"${LETTER}"/"${SOURCE}"

	# Move files
	mv chroot/"${SOURCE}"_* source/debian/"${LETTER}"/"${SOURCE}"
done

# Creating stage file
Create_stagefile .stage/source_debian
