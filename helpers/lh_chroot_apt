#!/bin/sh

# lh_chroot_apt(1) - manage /etc/apt/apt.conf
# Copyright (C) 2006-2008 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="manage /etc/apt/apt.conf"
HELP=""
USAGE="${PROGRAM} {install|remove} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

# Requiring stage file
Require_stagefile .stage/bootstrap

case "${1}" in
	install)
		Echo_message "Configuring file /etc/apt/apt.conf"

		# Checking stage file
		Check_stagefile .stage/chroot_apt

		# Checking lock file
		Check_lockfile .lock

		# Creating lock file
		Create_lockfile .lock

		mkdir -p chroot/etc/apt/apt.conf.d

		# Configuring apt ftp proxy
		if [ -n "${LH_APT_FTP_PROXY}" ]
		then
			echo "Acquire::ftp::Proxy \"${LH_APT_FTP_PROXY}\";" > chroot/etc/apt/apt.conf.d/00ftp-proxy
		fi

		# Configuring apt http proxy
		if [ -n "${LH_APT_HTTP_PROXY}" ]
		then
			echo "Acquire::http::Proxy \"${LH_APT_HTTP_PROXY}\";" > chroot/etc/apt/apt.conf.d/00http-proxy
		fi

		# Configuring apt pdiffs
		case "${LH_APT_PDIFFS}" in
			enabled)
				echo "Acquire::PDiffs \"true\";" > chroot/etc/apt/apt.conf.d/00pdiffs
				;;

			disabled)
				echo "Acquire::PDiffs \"false\";" > chroot/etc/apt/apt.conf.d/00pdiffs
				;;
		esac

		# Configuring apt pipeline
		if [ -n "${LH_APT_PIPELINE}" ]
		then
			echo "Acquire::http::Pipeline-Depth \"${LH_APT_PIPELINE}\";" > chroot/etc/apt/apt.conf.d/00pipeline
		fi

		# Configuring apt recommends
		case "${LH_APT_RECOMMENDS}" in
			enabled)
				echo "APT::Install-Recommends \"true\";" > chroot/etc/apt/apt.conf.d/00recommends
				echo "Aptitude::Recommends-Important \"true\";" >> chroot/etc/apt/apt.conf.d/00recommends
				;;

			disabled)
				echo "APT::Install-Recommends \"false\";" > chroot/etc/apt/apt.conf.d/00recommends
				echo "Aptitude::Recommends-Important \"false\";" >> chroot/etc/apt/apt.conf.d/00recommends
				;;
		esac

		# Configuring apt secure
		case "${LH_APT_SECURE}" in
			enabled)
				echo "APT::Get::AllowUnauthenticated \"false\";" > chroot/etc/apt/apt.conf.d/00secure
				echo "Aptitude::CmdLine::Ignore-Trust-Violations \"false\";" >> chroot/etc/apt/apt.conf.d/00secure
				;;

			disabled)
				echo "APT::Get::AllowUnauthenticated \"true\";" > chroot/etc/apt/apt.conf.d/00secure
				echo "Aptitude::CmdLine::Ignore-Trust-Violations \"true\";" >> chroot/etc/apt/apt.conf.d/00secure
				;;
		esac

		# Configuring apt preferences
		if [ -f config/chroot_apt/preferences ]
		then
			if [ -f chroot/etc/apt/preferences ]
			then
				mv chroot/etc/apt/preferences chroot/etc/apt/preferences.orig
			fi

			cp config/chroot_apt/preferences chroot/etc/apt/preferences
		fi

		# Creating stage file
		Create_stagefile .stage/chroot_apt
		;;

	remove)
		Echo_message "Deconfiguring file /etc/apt/apt.conf"

		# Checking lock file
		Check_lockfile .lock

		# Creating lock file
		Create_lockfile .lock

		# Deconfiguring aptitude ftp proxy
		rm -f chroot/etc/apt/apt.conf.d/00ftp-proxy

		# Deconfiguring aptitude http proxy
		rm -f chroot/etc/apt/apt.conf.d/00http-proxy

		# Deconfiguring aptitude pdiffs
		rm -f chroot/etc/apt/apt.conf.d/00pdiffs

		# Deconfiguring aptitude pipeline
		rm -f chroot/etc/apt/apt.conf.d/00pipeline

		# Deconfiguring aptitude recommends
		rm -f chroot/etc/apt/apt.conf.d/00recommends

		# Deconfiguring aptitude secure
		rm -f chroot/etc/apt/apt.conf.d/00secure

		# Deconfiguring apt preferences
		if [ -f chroot/etc/apt/preferences.orig ]
		then
			mv chroot/etc/apt/preferences.orig chroot/etc/apt/preferences
		else
			rm -f chroot/etc/apt/preferences
		fi

		# Removing stage file
		rm -f .stage/chroot_apt
		;;

	*)
		Usage
		;;
esac

if ls config/chroot_local-packages/*.deb > /dev/null 2>&1
then
	cat >>chroot/etc/apt/preferences <<EOF

Package: *
Pin: release o=chroot_local-packages
Pin-Priority: 1001
EOF
fi
