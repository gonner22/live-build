#!/bin/sh

# lh_source_virtual-hdd(1) - build source virtual-hdd image
# Copyright (C) 2006-2009 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
. "${LH_BASE:-/usr/share/live-helper}"/live-helper.sh

# Setting static variables
DESCRIPTION="$(Echo 'build source image')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

if [ "${LH_SOURCE}" != "enabled" ]
then
	exit 0
fi

if ! In_list virtual-hdd "${LH_SOURCE_IMAGES}"
then
	exit 0
fi

Echo_message "Begin building source virtual-hdd image..."

# Requiring stage file
Require_stagefile .stage/config .stage/source_debian

# Checking stage file
Check_stagefile .stage/source_virtual-hdd

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

if [ "${LH_CHROOT_BUILD}" = "enabled" ]
then
	case "${LH_BINARY_FILESYSTEM}" in
		ext2|ext3)
			Check_package chroot/sbin/mkfs.ext2 e2fsprogs
			;;
	esac
fi

# Installing depends
Install_package

# Remove old source
if [ -f source-virtual.img ]
then
	rm -f source-virtual.img
fi

# Everything which comes here needs to be cleaned up,
DU_DIM="$(du -ms source | cut -f1)"
REAL_DIM="$(Calculate_partition_size ${DU_DIM} ${LH_BINARY_FILESYSTEM})"
dd if=/dev/zero of=source-virtual.img bs=1024k count=0 seek=${REAL_DIM}

if [ "${LH_CHROOT_BUILD}" = "enabled" ]
then
	mv source-virtual.img chroot

	case "${LH_BINARY_FILESYSTEM}" in
		ext2)
			Chroot chroot "mkfs.ext2 -F -m 0 source-virtual.img"
			;;

		ext3)
			Chroot chroot "mkfs.ext3 -F source-virtual.img"
			;;
	esac

	mv chroot/source-virtual.img ./
else
	case "${LH_BINARY_FILESYSTEM}" in
		ext2)
			mkfs.ext2 -F -m 0 source-virtual.img
			;;

		ext3)
			mkfs.ext3 -F -m 0 source-virtual.img
			;;
	esac
fi

mkdir -p source.tmp
${LH_ROOT_COMMAND} mount -o loop source-virtual.img source.tmp
cp -r source/* source.tmp

${LH_ROOT_COMMAND} umount source.tmp
rmdir source.tmp

# Saving cache
Save_cache cache/packages_binary

# Removing depends
Remove_package

# Creating stage file
Create_stagefile .stage/source_virtual-hdd
