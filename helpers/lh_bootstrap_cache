#!/bin/sh

# lh_bootstrap_cache(1) - cach bootstrap stage
# Copyright (C) 2006-2009 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
. "${LH_BASE:-/usr/share/live-helper}"/functions.sh

# Setting static variables
DESCRIPTION="$(Echo 'cache bootstrap stage')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

# Check architecture
Check_crossarchitecture

Echo_message "Begin caching bootstrap stage..."

for STAGE in ${LH_CACHE_STAGES}
do
	if [ "${STAGE}" = "bootstrap" ]
	then
		case "${1}" in
			restore)
				# Checking stage file
				Check_stagefile .stage/bootstrap_cache.restore

				if [ -d cache/stages_bootstrap ]
				then
					# Checking lock file
					Check_lockfile .lock

					# Creating lock file
					Create_lockfile .lock

					# Removing old chroot
					rm -rf chroot

					# Restoring old cache
					${LH_ROOT_COMMAND} cp -a cache/stages_bootstrap chroot

					if [ -n "${LH_ROOT_COMMAND}" ]
					then
						${LH_ROOT_COMMAND} chown -R $(whoami):$(whoami) chroot
					fi

					# Creating stage file
					Create_stagefile .stage/bootstrap_cache.restore
					Create_stagefile .stage/bootstrap

					exit 0
				fi
				;;

			save)
				# Checking stage file
				Check_stagefile .stage/bootstrap_cache.save

				# Checking lock file
				Check_lockfile .lock

				# Creating lock file
				Create_lockfile .lock

				rm -rf cache/stages_bootstrap

				mkdir -p cache

				${LH_ROOT_COMMAND} cp -a chroot cache/stages_bootstrap

				if [ -n "${LH_ROOT_COMMAND}" ]
				then
					${LH_ROOT_COMMAND} chown -R $(whoami):$(whoami) cache/stages_bootstrap
				fi

				# Creating stage file
				Create_stagefile .stage/bootstrap_cache.save
				;;
		esac
	fi
done
